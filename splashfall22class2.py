# -*- coding: utf-8 -*-
"""SplashFall22Class2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LTYiE83MxIb4zF5eakGHu4hJD5csjXdX
"""

import numpy as np
import matplotlib.pyplot as plt

N = 100
x = np.arange(-10,10,20/N).reshape(N,1)
sin = np.sin(10*x) + np.sin(20*x) + np.sin(3*x)
plt.plot(sin)

sinft = np.fft.fft(sin)
plt.plot(np.abs(sinft))

xM = x @ np.ones((1,N))
xM= xM.T
xM

sinM = np.sin(12*xM)
plt.imshow(sinM)

sinMft = np.fft.fft(sinM)
plt.imshow(np.abs(sinMft))

canvas = np.zeros((N,N))
for i in range(N):
  for j in range(N):
    x = (i-N/2)/(N/2)
    y = (j-N/2)/(N/2)
    if x**2 + y**2 >.5 and x**2 + y**2<.7:
      canvas[i,j] = (x**2 + y**2)

plt.imshow(canvas)

noisycirc = canvas+sinM
plt.imshow(noisycirc)

noisycircft = np.fft.fft(noisycirc)
plt.imshow(np.abs(noisycircft))

filter = np.ones((N,N))
filter[:,35:65] = 0
plt.imshow(filter)

cleanft = noisycircft * filter
plt.imshow(np.abs(cleanft))
plt.show()
reconstructed = np.fft.ifft(cleanft)
plt.imshow(np.abs(reconstructed))

