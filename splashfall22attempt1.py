# -*- coding: utf-8 -*-
"""splashfall22attempt1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14pCxmm1B6-zYoS365NfQ3FuBZffv59vV
"""

import numpy as np
import matplotlib.pyplot as plt

N = 100
xv = np.arange(0,20,20/N).reshape(N,1)
xM = xv @ np.ones((1,N))
xM = xM.T
print(xM)

sinM = np.sin(xM)
plt.imshow(sinM)

sinMft = np.fft.fft(sinM)
plt.imshow(np.abs(sinMft))

sinM10 = np.sin(10*xM)
plt.imshow(sinM10)
plt.show()
sinMft = np.fft.fft(sinM10)
plt.imshow(np.abs(sinMft))
plt.show()

pic1 = np.zeros((N,N));
for i in range(N):
    for j in range(N):
        x = (j-N/2)/(N/2);
        y = (i-N/2)/(N/2);
        if x*x + y*y <.6**2 and x*x + y*y >.4**2: 
            pic1[i,j]=1;

plt.imshow(pic1)

noisycirc = pic1+sinM10
plt.imshow(noisycirc)

noisycircft = np.fft.fft(noisycirc)
plt.imshow(abs(noisycircft))

filt = np.zeros((N,N))
filt[:,0:25] = 1
filt[:,-25:N] = 1
plt.imshow(filt)
plt.show()

cleancircft = noisycircft*filt
plt.imshow(np.abs(cleancircft))

reconscirc = np.fft.ifft(cleancircft)
plt.imshow(np.abs(reconscirc))

